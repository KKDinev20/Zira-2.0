@model ChangePasswordViewModel

@{
    Layout = "Shared/_AccountLayout";
    ViewData["Title"] = @AccountText.ChangePassword;
}

<div class="container-xxl">
    <div class="authentication-wrapper authentication-basic container-p-y">
        <div class="authentication-inner py-4">
            <div class="card">
                <div class="card-body">
                    <div class="app-brand justify-content-center">
                        <a asp-controller="Home" asp-action="Index" class="app-brand-link gap-2">
                            <span class="app-brand-text demo text-body fw-bolder">Zira</span>
                        </a>
                    </div>
                    <h4 class="mb-2">@AccountText.ChangePassword</h4>
                    <p class="mb-4">@AccountText.ChangePasswordPrompt</p>

                    <form id="formAuthentication" class="mb-3" asp-action="ChangePassword" method="POST">
                        @Html.AntiForgeryToken()
                        <div class="mb-3 form-password-toggle">
                            <div class="d-flex justify-content-between">
                                <label asp-for="CurrentPassword" class="form-label">@AuthenticationText.CurrentPasswordLabel</label>
                                <a asp-controller="Authentication" asp-action="ForgotPassword" class="text-decoration-none">
                                    <small>@AuthenticationText.ForgotPasswordButton</small>
                                </a>
                            </div>
                            <div class="input-group input-group-merge">
                                <input
                                    type="password"
                                    class="form-control @(ViewData.ModelState["CurrentPassword"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                    asp-for="CurrentPassword"
                                    placeholder="••••••••"
                                    aria-describedby="password"/>
                                <span class="input-group-text cursor-pointer">
                                    <i class="bx bx-hide"></i>
                                </span>
                                @if (ViewData.ModelState["CurrentPassword"]?.Errors.Count > 0)
                                {
                                    <div class="invalid-feedback">@AuthenticationText.CurrentPasswordIsRequiredErrorMessage</div>
                                }
                            </div>
                        </div>
                        <div class="mb-3 form-password-toggle">
                            <div class="d-flex justify-content-between">
                                <label asp-for="NewPassword" class="form-label">@AuthenticationText.PasswordTitle</label>
                                <a asp-controller="Authentication" asp-action="ForgotPassword" class="text-decoration-none">
                                    <small>@AuthenticationText.NewPasswordLabel</small>
                                </a>
                            </div>
                            <div class="input-group input-group-merge">
                                <input
                                    type="password"
                                    class="form-control @(ViewData.ModelState["NewPassword"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                    asp-for="NewPassword"
                                    placeholder="••••••••"
                                    aria-describedby="password"/>
                                <span class="input-group-text cursor-pointer">
                                    <i class="bx bx-hide"></i>
                                </span>
                                @if (ViewData.ModelState["NewPassword"]?.Errors.Count > 0)
                                {
                                    <div class="invalid-feedback">@AuthenticationText.NewPasswordIsRequiredErrorMessage</div>
                                }
                            </div>
                        </div>
                        <div class="mb-3 form-password-toggle">
                            <div class="d-flex justify-content-between">
                                <label asp-for="ConfirmPassword" class="form-label">@AuthenticationText.PasswordTitle</label>
                                <a asp-controller="Authentication" asp-action="ForgotPassword" class="text-decoration-none">
                                    <small>@AuthenticationText.ConfirmNewPasswordLabel</small>
                                </a>
                            </div>
                            <div class="input-group input-group-merge">
                                <input
                                    type="password"
                                    class="form-control @(ViewData.ModelState["ConfirmPassword"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                    asp-for="ConfirmPassword"
                                    placeholder="••••••••"
                                    aria-describedby="password"/>
                                <span class="input-group-text cursor-pointer">
                                    <i class="bx bx-hide"></i>
                                </span>
                                @if (ViewData.ModelState["ConfirmPassword"]?.Errors.Count > 0)
                                {
                                    <div class="invalid-feedback">@AuthenticationText.ConfirmNewPasswordIsRequiredErrorMessage</div>
                                }
                            </div>
                        </div>

                        <button class="btn btn-primary d-grid w-100" type="submit">@AccountText.ChangePassword</button>
                    </form>

                    <div class="text-center">
                        <a asp-controller="Account" asp-action="Profile" class="d-flex align-items-center justify-content-center">
                            <i class="bx bx-chevron-left scaleX-n1-rtl bx-sm"></i>
                            @AccountText.BackLogin
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>