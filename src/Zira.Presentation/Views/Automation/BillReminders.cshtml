@inject UserManager<ApplicationUser> UserManager
@model PaginatedViewModel<Zira.Presentation.Models.ReminderViewModel>

@{
    ViewData["Title"] = @AccountText.BillReminders;
    var user = await UserManager.GetUserAsync(User);
    Layout = "Shared/_AutomationLayout";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-xl-12">
                <div class="card mb-4 shadow-sm">
                    <div class="card-header text-center text-dark d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 d-flex align-items-center gap-2">
                            <i class='bx bxs-bank'></i>@AccountText.BillReminders
                        </h5>
                    </div>

                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }
                    <div class="card-body">
                        @if (Model.Items.Any())
                        {
                            <table class="table table-striped">
                                <thead>
                                <tr>
                                    <th>@ReminderText.Title</th>
                                    <th>@ReminderText.Amount</th>
                                    <th>@ReminderText.DueDate</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var reminder in Model.Items)
                                {
                                    <tr>
                                        <td>@reminder.Title</td>
                                        <td>@reminder.Amount.ToString("N2") @user.PreferredCurrencyCode</td>
                                        <td>@reminder.DueDate.ToShortDateString()</td>
                                    </tr>
                                }
                                </tbody>
                            </table>

                            <div class="d-flex justify-content-center mt-4">
                                <nav aria-label="Page navigation">
                                    <ul class="pagination">
                                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("BillReminders",  new { page = 1 })">
                                                <i class="tf-icon bx bx-chevrons-left"></i>
                                            </a>
                                        </li>

                                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("BillReminders", new { page = Model.CurrentPage - 1 })">
                                                <i class="tf-icon bx bx-chevron-left"></i>
                                            </a>
                                        </li>

                                        @for (int i = 1; i <= Model.TotalPages; i++)
                                        {
                                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                                <a class="page-link" href="@Url.Action("BillReminders", new { page = i })">@i</a>
                                            </li>
                                        }

                                        <li class="page-item @(Model.CurrentPage == Model.TotalPages || Model.TotalPages == 0 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("BillReminders",  new { page = Model.CurrentPage + 1 })">
                                                <i class="tf-icon bx bx-chevron-right"></i>
                                            </a>
                                        </li>

                                        <li class="page-item @(Model.CurrentPage == Model.TotalPages || Model.TotalPages == 0 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("BillReminders", new { page = Model.TotalPages })">
                                                <i class="tf-icon bx bx-chevrons-right"></i>
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                        }
                        else
                        {
                            <p class="text-center">@ReminderText.NoReminders.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="https://code.jquery.com/jquery-1.7.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.4/signalr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        var title = '@TempData["ReminderTitle"]';
        var remark = '@TempData["ReminderRemark"]';
        var dueDate = '@TempData["ReminderDueDate"]';
        var amount = '@TempData["ReminderAmount"]';

        if (title) {
            var toastHtml = `
        <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
            <div class="bs-toast toast fade show bg-success" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <i class="bx bx-bell me-2"></i>
                    <div class="me-auto fw-semibold">@ReminderText.ReminderCreated</div>
                    <small>${dueDate}</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    <strong>${title}</strong><br>
                    <span>@ReminderText.Remark: ${remark}</span><br>
                    <span>@ReminderText.Amount: ${amount}</span>
                </div>
            </div>
        </div>`;

            $('body').append(toastHtml);

            setTimeout(function () {
                $('.toast').toast('hide');
            }, 5000);
        }

        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            var errorToastHtml = `
        <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
            <div class="bs-toast toast fade show bg-danger" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <i class="bx bx-bell me-2"></i>
                    <div class="me-auto fw-semibold">@ReminderText.Error</div>
                    <small>@ReminderText.JustNow</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    ${errorMessage}
                </div>
            </div>
        </div>`;

            $('body').append(errorToastHtml);

            setTimeout(function () {
                $('.toast').toast('hide');
            }, 10000);
        }
    });

</script>