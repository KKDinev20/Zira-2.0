@using Zira.Presentation.Extensions
@model BudgetListViewModel
@{
    ViewData["Title"] = @BudgetText.Budgets;
    Layout = "Shared/_BudgetLayout";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">@BudgetText.Budgets</h4>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <div class="card">
        <h5 class="card-header">@BudgetText.BudgetList</h5>
        <div class="table-responsive text-nowrap">
            <table class="table">
                <thead>
                <tr>
                    <th>@BudgetText.BudgetCategory</th>
                    <th>@BudgetText.BudgetAmount</th>
                    <th>@BudgetText.BudgetMonth</th>
                    <th>@BudgetText.Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var budget in Model.Budgets)
                {
                    <tr>
                        <td>
                            <i class="bx bx-wallet-alt me-3"></i> <strong>@budget.Category.GetLocalizedExpenseCategory() </strong>
                        </td>
                        <td>@budget.Amount.ToString("C")</td>
                        <td>@budget.Month.ToString("dd-MM-yyyy")</td>
                        <td>
                            <div class="dropdown">
                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("EditBudget", "Budget", new { id = budget.BudgetId })">
                                            <i class="bx bx-edit-alt me-1"></i> @BudgetText.Edit
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item" href="@Url.Action("DeleteBudget", "Budget", new { id = budget.BudgetId })">
                                            <i class="bx bx-trash me-1"></i> @BudgetText.Delete
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("ViewBudgets", "Budget", new { page = 1 })">
                            <i class="tf-icon bx bx-chevrons-left"></i>
                        </a>
                    </li>

                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("ViewBudgets", "Budget", new { page = Model.CurrentPage - 1 })">
                            <i class="tf-icon bx bx-chevron-left"></i>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ViewBudgets", "Budget", new { page = i })">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages || Model.TotalPages == 0 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("ViewBudgets", "Budget", new { page = Model.CurrentPage + 1 })">
                            <i class="tf-icon bx bx-chevron-right"></i>
                        </a>
                    </li>

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages || Model.TotalPages == 0 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("ViewBudgets", "Budget", new { page = Model.TotalPages })">
                            <i class="tf-icon bx bx-chevrons-right"></i>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>