@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Zira.Presentation.Extensions
@model LoginViewModel
@{
    Layout = "Shared/_AuthenticationLayout";
}
<title>Login</title>
<div class="container-xxl">
    <div class="authentication-wrapper authentication-basic container-p-y">
        <div class="authentication-inner">
            <div class="card">
                <div class="card-body">
                    <div class="app-brand justify-content-center mb-4">
                        <a asp-controller="Home" asp-action="Index" class="app-brand-link gap-2 text-decoration-none">
                            <span class="app-brand-text demo text-body fw-bolder">Zira</span>
                        </a>
                    </div>

                    <p class="mb-4">@AuthenticationText.LoginSubtitle</p>

                    @if (TempData.ContainsKey("MessageText"))
                    {
                        <div class="alert alert-@TempData["MessageVariant"]">
                            @TempData["MessageText"]
                        </div>
                    }

                    @if (!string.IsNullOrWhiteSpace(ViewData.ModelState.GetFirstGlobalError()))
                    {
                        <div class="alert alert-danger">
                            @ViewData.ModelState.GetFirstGlobalError()
                        </div>
                    }

                    <form id="formAuthentication" asp-action="Login" method="post" class="mb-3">
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            <label asp-for="Email" class="form-label">@AuthenticationText.EmailLabel</label>
                            <input
                                type="text"
                                class="form-control @(ViewData.ModelState["Email"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                placeholder="@AuthenticationText.EmailLabel"
                                asp-for="Email"
                                value="@ViewData["email-username"]"/>
                            @if (ViewData.ModelState["Email"]?.Errors.Count > 0)
                            {
                                <div class="invalid-feedback">@AuthenticationText.EmailIsRequiredErrorMessage</div>
                            }
                        </div>

                        <div class="mb-3 form-password-toggle">
                            <div class="d-flex justify-content-between">
                                <label asp-for="Password" class="form-label">@AuthenticationText.PasswordTitle</label>
                                <a asp-controller="Authentication" asp-action="ForgotPassword" class="text-decoration-none">
                                    <small>@AuthenticationText.ForgotPasswordButton</small>
                                </a>
                            </div>
                            <div class="input-group input-group-merge">
                                <input
                                    type="password"
                                    class="form-control @(ViewData.ModelState["Password"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                    asp-for="Password"
                                    placeholder="••••••••"
                                    aria-describedby="password"/>
                                <span class="input-group-text cursor-pointer">
                                    <i class="bx bx-hide"></i>
                                </span>
                                @if (ViewData.ModelState["Password"]?.Errors.Count > 0)
                                {
                                    <div class="invalid-feedback">@AuthenticationText.PasswordIsRequiredErrorMessage</div>
                                }
                            </div>
                        </div>

                        <div class="mb-3 form-check">
                            <input
                                type="checkbox"
                                class="form-check-input"
                                asp-for="RememberAccess"
                                id="rememberMe"/>
                        </div>

                        <div class="mb-3">
                            <button class="btn btn-primary d-grid w-100" type="submit">@AuthenticationText.SignInButton</button>
                        </div>
                    </form>

                    <p class="text-center">
                        <span>@AuthenticationText.NewUser</span>
                        <a asp-controller="Authentication" asp-action="Register" class="text-decoration-none">
                            <span>@AuthenticationText.SignUpButton</span>
                        </a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>