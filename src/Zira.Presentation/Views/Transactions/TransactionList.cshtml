@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Zira.Data.Enums
@model Zira.Presentation.Models.TransactionsListViewModel

@{
    ViewData["Title"] = @TransactionText.Transactions;
    Layout = "Shared/_TransactionsLayout";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">@TransactionText.Transactions</h4>
    <div class="card mb-4">
        <div class="card-header">
            <h5>@TransactionText.QuickAddExpense</h5>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("QuickAddTransaction", "Transactions", FormMethod.Post))
            {
                <div class="row">
                    <div class="col-md-4" id="category-field">
                        <label for="Category" class="form-label">@TransactionText.Category</label>
                        <select id="Category" name="Category" class="form-select" required>
                            <option value="" disabled selected>@TransactionText.SelectACategory</option>
                            @foreach (var category in Enum.GetValues(typeof(Categories)).Cast<Categories>())
                            {
                                <option value="@category">@category.GetLocalizedExpenseCategory()</option>
                            }
                        </select>
                    </div>

                    <div class="col-md-4">
                        <label for="Amount" class="form-label">@TransactionText.Amount</label>
                        <input type="number" id="Amount" name="Amount" class="form-control" placeholder="0.00" step="0.01" required/>
                    </div>

                    <div class="col-md-4">
                        <label for="DateSpent" class="form-label">@TransactionText.TransactionDate</label>
                        <input type="date" id="DateSpent" name="DateSpent" class="form-control" value="@DateTime.UtcNow.ToString("yyyy-MM-dd")"/>
                    </div>
                </div>

                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">@TransactionText.QuickAdd</button>
                </div>
            }
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <div class="card">
        <h5 class="card-header">@TransactionText.Transactions</h5>
        <div class="table-responsive text-nowrap">
            <table class="table table-sm">
                <thead>
                <tr>
                    <th>@TransactionText.Type</th>
                    <th>@TransactionText.Category</th>
                    <th>@TransactionText.Amount</th>
                    <th>@TransactionText.TransactionDate</th>
                    <th>@TransactionText.Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var transaction in Model.Transactions)
                {
                    <tr>
                        <td>
                            <strong>@transaction.Type.GetLocalizedTransactionType()</strong>
                        </td>
                        <td>
                            @if (transaction.Type == TransactionType.Expense)
                            {
                                <strong>@transaction.Category?.GetLocalizedExpenseCategory()</strong>
                            }
                            else
                            {
                                <strong>@transaction.Source?.GetLocalizedIncomeSource()</strong>
                            }
                        </td>
                        <td>@transaction.Amount.ToString("C")</td>
                        <td>@transaction.Date.ToString("dd-MM-yyyy")</td>
                        <td>
                            <div class="dropdown">
                                <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                    <i class="bx bx-dots-vertical-rounded"></i>
                                </button>
                                <div class="dropdown-menu">
                                    <a class="dropdown-item" href="@Url.Action("EditTransaction", "Transactions", new { id = transaction.Id })">
                                        <i class="bx bx-edit-alt me-1"></i> @TransactionText.Edit
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("DeleteTransaction", "Transactions", new { id = transaction.Id })">
                                        <i class="bx bx-trash me-1"></i> @TransactionText.Delete
                                    </a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("TransactionList", "Transactions", new { page = 1 })">
                            <i class="tf-icon bx bx-chevrons-left"></i>
                        </a>
                    </li>

                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("TransactionList", "Transactions", new { page = Model.CurrentPage - 1 })">
                            <i class="tf-icon bx bx-chevron-left"></i>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("TransactionList", "Transactions", new { page = i })">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages || Model.TotalPages == 0 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("TransactionList", "Transactions", new { page = Model.CurrentPage + 1 })">
                            <i class="tf-icon bx bx-chevron-right"></i>
                        </a>
                    </li>

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages || Model.TotalPages == 0 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("TransactionList", "Transactions", new { page = Model.TotalPages })">
                            <i class="tf-icon bx bx-chevrons-right"></i>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

<partial name="_ValidationScriptsPartial"/>