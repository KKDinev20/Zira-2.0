@model Zira.Presentation.Models.SavingsGoalListViewModel
@{
    ViewData["Title"] = @SavingsGoalText.SavingsGoals;
    Layout = "Shared/_SavingsGoalLayout";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-xl-8">
                <div class="card mb-4 shadow-sm">
                    <div class="card-header text-center text-dark d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@SavingsGoalText.SavingsGoals</h5>
                        <a asp-action="CreateSavingsGoal" asp-controller="SavingsGoal" class="btn btn-success">
                            <i class="bx bx-plus"></i> Add New Goal
                        </a>
                    </div>
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
                    }
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                    }
                    <div class="card-body">
                        @if (!Model.Goals.Any())
                        {
                            <p class="text-center">No savings goals set yet. Start saving today!</p>
                        }
                        else
                        {
                            <table class="table table-striped">
                                <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Progress</th>
                                    <th>Target Amount</th>
                                    <th>Current Amount</th>
                                    <th>Target Date</th>
                                    <th>Actions</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var goal in Model.Goals)
                                {
                                    <tr>
                                        <td>@goal.Name</td>
                                        <td>
                                            <div class="progress" style="height: 20px;">
                                                @{ var progress = (goal.CurrentAmount / goal.TargetAmount) * 100; }
                                                <div class="progress-bar @(progress < 30 ? "bg-danger" : progress < 70 ? "bg-warning" : "bg-success")" role="progressbar" style="width: @progress%;">
                                                    @progress.ToString("0.0")%
                                                </div>
                                            </div>
                                        </td>
                                        <td>$@goal.TargetAmount.ToString("0.00")</td>
                                        <td>$@goal.CurrentAmount.ToString("0.00")</td>
                                        <td>@goal.TargetDate?.ToString("MMMM dd, yyyy")</td>
                                        <td>
                                            <a href="@Url.Action("EditSavingsGoal", "SavingsGoal", new { id = goal.Id })" class="btn btn-primary btn-sm">@SavingsGoalText.Edit</a>
                                            <a href="@Url.Action("DeleteSavingsGoal", "SavingsGoal", new { id = goal.Id })" class="btn btn-danger btn-sm">@SavingsGoalText.Delete</a>
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>

                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center mt-4">
                                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("ViewSavingsGoals", "SavingsGoal", new { page = 1 })">
                                            <i class="bx bx-chevrons-left"></i>
                                        </a>
                                    </li>

                                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("ViewSavingsGoals", "SavingsGoal", new { page = Model.CurrentPage - 1 })">
                                            <i class="bx bx-chevron-left"></i>
                                        </a>
                                    </li>

                                    @for (int i = 1; i <= Model.TotalPages; i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("ViewSavingsGoals", "SavingsGoal", new { page = i })">@i</a>
                                        </li>
                                    }

                                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("ViewSavingsGoals", "SavingsGoal", new { page = Model.CurrentPage + 1 })">
                                            <i class="bx bx-chevron-right"></i>
                                        </a>
                                    </li>

                                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("ViewSavingsGoals", "SavingsGoal", new { page = Model.TotalPages })">
                                            <i class="bx bx-chevrons-right"></i>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.page-link').forEach(link => {
        link.addEventListener('click', function(e) {
            const url = new URL(this.href);
            const page = url.searchParams.get('page');

            history.pushState(null, '', `?page=${page}`);
            this.closest('.card').scrollIntoView({ behavior: 'smooth' });
        });
    });
</script>