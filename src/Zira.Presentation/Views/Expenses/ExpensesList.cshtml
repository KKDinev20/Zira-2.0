@model ExpensesListViewModel

@{
Layout = "Shared/_ExpensesLayout";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">Expenses</h4>
    <div class="card mb-4">
        <div class="card-header">
            <h5>Quick Add Expense</h5>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("QuickAddExpenses", "Expenses", FormMethod.Post))
            {
            <div class="row">
                <div class="col-md-4">
                    <label for="Category" class="form-label">Category</label>
                    <select id="Category" name="Category" class="form-select">
                        @foreach (var category in Enum.GetValues(typeof(Zira.Data.Enums.Categories)))
                        {
                        <option value="@category">@category</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="Amount" class="form-label">Amount</label>
                    <input type="number" id="Amount" name="Amount" class="form-control" placeholder="0.00" step="0.01" required />
                </div>
                <div class="col-md-4">
                    <label for="DateSpent" class="form-label">Date</label>
                    <input type="date" id="DateSpent" name="DateSpent" class="form-control" value="@DateTime.UtcNow.ToString("yyyy-MM-dd")" />
                </div>
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">Quick Add</button>
            </div>
            }
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <div class="card">
        <h5 class="card-header">Expenses List</h5>
        <div class="table-responsive text-nowrap">
            <table class="table">
                <thead>
                <tr>
                    <th>Category</th>
                    <th>Amount</th>
                    <th>Date Spent</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var expense in Model.Expenses)
                {
                <tr>
                    <td><i class="bx bx-wallet-alt me-3"></i> <strong>@expense.Category</strong></td>
                    <td>@expense.Amount.ToString("C")</td>
                    <td>@expense.DateSpent.ToString("dd-MM-yyyy")</td>
                    <td>
                        <span class="badge bg-label-primary me-1">Completed</span>
                    </td>
                    <td>
                        <div class="dropdown">
                            <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" href="@Url.Action("EditExpenses", "Expenses", new { id = expense.ExpenseId })">
                                    <i class="bx bx-edit-alt me-1"></i> Edit
                                </a>
                                <a class="dropdown-item" href="@Url.Action("DeleteExpense", "Expenses", new { id = expense.ExpenseId })">
                                    <i class="bx bx-trash me-1"></i> Delete
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-center mt-4">
            @if (Model.CurrentPage > 1)
            {
            <a href="@Url.Action("ExpensesList", "Expenses", new { page = Model.CurrentPage - 1 })" class="btn btn-link">Previous</a>
            }

            <span class="mx-3">Page @Model.CurrentPage of @Model.TotalPages</span>

            @if (Model.CurrentPage < Model.TotalPages)
            {
            <a href="@Url.Action("ExpensesList", "Expenses", new { page = Model.CurrentPage + 1 })" class="btn btn-link">Next</a>
            }
        </div>
    </div>
</div>
